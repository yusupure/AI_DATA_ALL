回归绘图
%matplotlib inline
import numpy as np
import pandas as pd
import matplotlib as mpl
import matplotlib.pyplot as plt
import seaborn as sns
-----------------------------------------------------------------------------------------------------------------------------------
sns.set(color_codes=True)开启色彩
np.random.seed(sum(map(ord, "regression")))#绘图方式
tips = sns.load_dataset("tips")提取文件内容
tips.head()打印内容np一样
-----------------------------------------------------------------------------------------------------------------------------------
案例：
regplot()回归图初学seaborn回归函数优先使用此函数
sns.regplot(x="total_bill",y="tip",data=tips)x,y轴名称，传入data方式
x_jitter=.05加入小范围的浮动值
sns.implot()工具更多功能更多
-----------------------------------------------------------------------------------------------------------------------------------

回归绘图33课时
sns.set(style="whitegrid",color_codes=True)
np.random.seed(sum(map(ord, "regression")))

提取三个数据集
sns.load_dataset("iris",tips,titanic)

-----------------------------------------------------------------------------------------------------------------------------------
sns.stripplot(x="daty",y="total_bill",data=tips,jitter=True)
jitter=True增加数据的偏移值

sns.swarmplot(x="total_bill",y="daty",data=tips,hue="sex")
更好X,Y的值存放位置就会变成横向或纵向方式显示图形
hue="sex"对指标进行分色处理
hue="time"

-----------------------------------------------------------------------------------------------------------------------------------
合图：
sns.boxplot(x="day",y="total_bill",hue="time",data=tipe)

###################################################################################################################################

sns.factorplot(kind=图形名称)可以转换成任何一类图形
seaborn.factorplot(x=None, y=None, hue=None, data=None, row=None, col=None, col_wrap=None, estimator=<function mean>, ci=95, n_boot=1000, units=None, order=None, hue_order=None, row_order=None, col_order=None, kind='point', size=4, aspect=1, orient=None, color=None, palette=None, legend=True, legend_out=True, sharex=True, sharey=True, margin_titles=False, facet_kws=None, **kwargs)

### Parameters： ###

* x,y,hue 数据集变量 变量名
* date 数据集 数据集名
* row,col 更多分类变量进行平铺显示 变量名
* col_wrap 每行的最高平铺数 整数
* estimator 在每个分类中进行矢量到标量的映射 矢量
* ci 置信区间 浮点数或None
* n_boot 计算置信区间时使用的引导迭代次数 整数
* units 采样单元的标识符，用于执行多级引导和重复测量设计 数据变量或向量数据
* order, hue_order 对应排序列表 字符串列表
* row_order, col_order 对应排序列表 字符串列表
* kind : 可选：point 默认, bar 柱形图, count 频次, box 箱体, violin 提琴, strip 散点，swarm 分散点
size 每个面的高度（英寸） 标量
aspect 纵横比 标量
orient 方向 "v"/"h"
color 颜色 matplotlib颜色
palette 调色板 seaborn颜色色板或字典
legend hue的信息面板 True/False
legend_out 是否扩展图形，并将信息框绘制在中心右边 True/False
share{x,y} 共享轴线 True/False
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
