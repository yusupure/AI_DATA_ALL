import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline
-----------------------------------------------------------------------------------------------------------------------------
### 调色板 ###
* 颜色很重要
* color_palette()能传入任何Matplotlib所支持的颜色
* color_palette()不写参数则默认颜色
  $$$$$$$("hls", 8)8组hls颜色方案
  分类色板
  cp=sns.color_palette()
  sns.palplot(cp)
-----------------------------------------------------------------------------------------------------------------------------  
* set_palette()设置所有图的颜色
-------------------------------------------------------------------------------------------------------------------
圆形画板
sns.color_palette("hls",8)分别组成8个颜色组
np.random.normal((size=20,8))+np.arange(8)/2
sns.boxplot(data=data,palette=sns.color_palette("hls",8))
-----------------------------------------------------------------------------------------------------------------------------
颜色饱和度
* hls_palette(控制颜色的高亮，饱和)
  sns.hls_palette(8, l=.7, s=.9)8组颜色，l=亮度，s=饱和
  sns.boxplot(data=data,palette=sns.color_palette("hls", 8))
  "Paired",8一对一对的颜色
-----------------------------------------------------------------------------------------------------------------------------
xkcd颜色命名颜色RGB颜色空间
plt.plot([0,1],[0,1]),sns.xkcd_rgb["pale red"],lw=3)
plt.plot([0,1],[0,2]),sns.xkcd_rgb["medium green"],lw=3)
plt.plot([0,1],[0,3]),sns.xkcd_rgb["denim blue"],lw=3)
---------------------------------------------------------------------------------------------------
连续色板
Blues(越来越深
BuGn_r深变浅
cubehelix色调线性变换start=开始，范围rot
light_palette(green)
dark_palette(purple)调用定制连续调色板
navy（reverse=True）

#色调线性变换
sns.cubehelix_palette()
srart=颜色区间
rot=区间
------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------
调用定制连续调色板
sns.light_palette()高亮变换   -----翻转变换reverse=True
sns.dark_palette()深色变换    -----翻转变换reverse=True

案例
x,y=np.random.multivariate.normal([0,0],[[1,-.5],[-.5,1]],size=300).T
dl=sns.dark_palette("green", as_cmap=True) AS_cmap=True地图图形
sns.kdeplot(x,y,cmap=dl)
sns.palplot(sns.light_palette((210, 90, 60), input="husl"))
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
