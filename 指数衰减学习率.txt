学习率
决定参数每次更新的幅度
wn+1=wn−learningrate▽

指数衰减学习率
learning–rate=LEARNING–RATE–BASE∗LEARNING–RATE–DECAYglobalstepLEARNING–RATE–STEP


import tensorflow as tf
LEARNING_RATE_BASE=0.1#学习率的最小值
LEARNING_RATE_DECAY=0.99#学习率的最大值
LEARNING_RATE_STEP=1#每次自动变化值范围
global_step=tf.Variable(0,trainable=False)#不参与计算的表示trainable=False,默认设置0
learning_rate=tf.train.exponential_decay(LEARNING_RATE_BASE,global_step,LEARNING_RATE_STEP,LEARNING_RATE_DECAY,staircase=True)
w=tf.Variable(tf.constant(5,dtype=tf.float32))
loss=tf.square(w+1)
train_step=tf.train.GradientDescentOptimizer(learning_rate).minimize(loss,global_step)
with tf.Session() as sess:
    init_op=tf.global_variables_initializer()
    sess.run(init_op)
    for i in range(40):
        sess.run(train_step)
        learning_rate_val=sess.run(learning_rate)
        global_step_val=sess.run(global_step)
        w_val=sess.run(w)
        loss_val=sess.run(loss)
        print(i,global_step_val,w_val,loss_val,learning_rate_val)
