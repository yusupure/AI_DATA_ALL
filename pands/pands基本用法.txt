#打开文件函数read_csv
xx=pandas.read_csv("文件路径或如果当前就直接使用文件名称")
#显示数据head()
xx.head()打印显示数据（添加数字就是代表显示前多少行数）
xx.head(3)打印三行数据
aa=xx.head()赋值操作
#tail()显示后几行数据
#columns显示数据指标，可以理解为字段名称
#shape查看有多少个指标和多少行数据
-----------------------------------------------------------------------------------------------------
#获取元素数据方式
#loc[]提取元素位置的数据（索引数据）类似list【0】获取元素的方法或用切片获取的方式获取[1:10]前10条数据
#xx['abc']获取数据第一行数据，类似获取dict方式类似（获取两个数据的方式需要放到一个List里面填入参数）xx[名称]
#columns.tolist()把当前的列明做成一个List模式
#endswith("xx")结尾的提取出来，前天需要做一次迭代遍历数据，在进行查找
1通过append()的方式组成List
2通过list查找的方式获取List索引的数据。类似提取字典方式匹配key值获取内容
-----------------------------------------------------------------------------------------------------
#计算方式（注意 必须维度一致数据必须一致，否则会报错）
除法操作=xx.["列明"]/1000（/除法）：处理过程会对此列所有数据进行除法
乘法操作=xx['1']*xx['2']两个相成得出数据
-----------------------------------------------------------------------------------------------------
#获取最大值
.max()
.min()
-----------------------------------------------------------------------------------------------------
#排序函数
inplace:(xx['agc],inplace=True) （获取新的数据，false=代表作为新的数据）
ascending:(xx['agc],inplace=True,ascending=False)(降序操作，否则升序)
-----------------------------------------------------------------------------------------------------
#判读函数
pd.isnull('字段名称')判断缺失值
mean()获取平均值
pivot_table(index='字段（以什么为基准）',values='字段（与基准有什么关系）'，aggfunc=np.mean（）)
pivot_table(index='字段（以什么为基准）',values='字段（与基准有什么关系）'，aggfunc=np.sum（）)
dropna()丢掉缺失值的方法
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------

