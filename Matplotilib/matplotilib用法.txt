报错解决方法重新安装https://www.lfd.uci.edu/~gohlke/pythonlibs/#matplotlib
pd.read_csv('UNRATE.csv')文件

####to_datetime()转换为标准的日期格式
pd.to_datetime(unrtae['data'])执行方式
-------------------------------------------------------------------------------------------------------------------------------
侧线图
import matplotilib .pyplot as plt
####plot画图函数
plt.plot()通用画图方式1
plt.show()通用画图方式2
###添加内容
先获取特定数据集fm[0:12]
plt.plot(x轴数据<fm['data']>,y轴数据<fm['VALUE']>)
plt.show()
增加控制方式
plt.xticks(rotation=45)<可以制定个角度，对坐标变换,45度方式
####
X轴含义
plt.xlabel('标识标题')
Y轴含义
plt.ylabel('标识标题')
标题
plt.title('标题名称')
-------------------------------------------------------------------------------------------------------------------------------
####子图方式
plt.figure()设置画图的区间

####add_subplot加入图集
fig.add_subplot(4,1,x)4行一列第几个图的标记1
fig.add_subplot(2,2,x)2行2列第几个图的标记2
fig.add_subplot(2,3,x)2行三列第几个图的标记3

####figgure(figsize=3,3)画图区域的大小代表3*3
plt.figure()
ax1=fig.add_subplot(2,1,1)
ax1.plot(np.random.randint(1,4,4),np.arange(4))代表1行4列，4组数据
plt.show()
-------------------------------------------------------------------------------------------------------------------------------
双线图
fm['MONTH']=fm['DATE'].dt.month
fm['MONTH']=fm['DATE'].dt.month
fig=plt.figure(figsize=(6,3))
plt.plot(fm[0:12]['MONTH'], fm[0:12]['VALUE'],c='red')
plt.plot(fm[12:24]['MONTH'], fm[12:24]['VALUE'],c='blue')
#plt.xticks(rotation=45)
plt.show()
****************************************************************
扩展练习2
fm['MONTH']=fm['DATE'].dt.month
fig=plt.figure(figsize=(10,6))
color=['red','blue','orange','green','black']
for i in range(5):
    statrindex=i*12
    endindex=(i+1)*12
    subset=fm[statrindex:endindex]
    lable=str(1948+i)#迭代标签年份的方法
    plt.plot(subset['MONTH'],subset['VALUE'],c=color[i],llabel=label)#lable代表添加标签值的方式
    plt.legend(loc='best')(图形上加入一个标签识别图形线代表什么)
plt.show()
***********************************************************************
-------------------------------------------------------------------------------------------------------------------------------
柱形图subplots
ax=plt.subplots()
ax.bar('柱的间距','柱子高度',0.8(柱子的宽度)纵向
ax.barh()横向
plt.show()
reviews = pd.read_csv('fandango_scores.csv')#读取文件
cols = ['FILM', 'RT_user_norm', 'Metacritic_user_nom', 'IMDB_norm', 'Fandango_Ratingvalue', 'Fandango_Stars']#获取字段名称特定字段
norm_reviews = reviews[cols]#提取内容
num_cols = ['RT_user_norm', 'Metacritic_user_nom', 'IMDB_norm', 'Fandango_Ratingvalue', 'Fandango_Stars']#提取有一点差异不能存在str
bar_h=norm_reviews.ix[0,num_cols].values#获取第一行的数据列表
bar_p=arange(5)+0.5#创建间距
set_name=range(1,6)#随机1到6，原因是忽略掉str的文字字段
fig, ax=plt.subplots()#产生图形

ax.bar(bar_p,bar_h,0.3)#产出图形
ax.set_xticks(set_name)#设置名称获取1-6地名称
ax.set_xticklabels(num_cols,rotation=45)#设置名称为45度的变换

ax.set_xlabel('plan')#轴名称
ax.set_ylabel('kd')#轴名称
ax.set_title('tst008')#标题
plt.show()
-------------------------------------------------------------------------------------------------------------------------------
点行图scatter
fig. ax=plt.subplots()
与上面基本类似做法
scatter(x,y轴分布的规则)
fig, ax=plt.subplots()
ax.scatter(norm_reviews["Fandango_Ratingvalue"],norm_reviews["RT_user_norm"])#提取方式按照上面的数据来获取，或直接读取文件内容
ax.set_xlabel("RT_user_norm")
ax.set_ylabel("Fandango_Ratingvalue")
plt.show()
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
